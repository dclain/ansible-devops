#!/bin/bash

# Note that we have removed the standard GRANT command, as in the context of this playbook the
# {{db2_username}} user already owns the schema:
#
# db2 create schema {{ db2_schema }} authorization {{ db2_username }}
#
# Also, the following line was removed:
# db2 GRANT DBADM,CREATETAB,BINDADD,CONNECT,CREATE_NOT_FENCED_ROUTINE,IMPLICIT_SCHEMA,
#   LOAD,CREATE_EXTERNAL_ROUTINE,QUIESCE_CONNECT,SECADM ON DATABASE TO USER {{ db2_username }}
#
# We also removed these statements due to similar error because we are running as the user that owns these anyway:
# SQL0554N  An authorization ID cannot grant a privilege or authority to itself
# db2 GRANT USE OF TABLESPACE MAXDATA TO USER {{ db2_username }}
# db2 GRANT CREATEIN,DROPIN,ALTERIN ON SCHEMA {{ db2_schema }} TO USER {{ db2_username }}

if [ -f "/tmp/setupdb_complete" ]; then
  echo "Aborting run.  /tmp/setupdb_complete exists; this script has already been executed"
  exit 0
fi

set -e
db2 connect to {{ db2_dbname }}
db2 update db cfg for {{ db2_dbname }} using dft_table_org ROW
db2 update db cfg for {{ db2_dbname }} using AUTO_MAINT ON DEFERRED
db2 update db cfg for {{ db2_dbname }} using AUTO_TBL_MAINT ON DEFERRED
db2 update db cfg for {{ db2_dbname }} using AUTO_RUNSTATS ON DEFERRED
db2 update db cfg for {{ db2_dbname }} using AUTO_REORG ON DEFERRED
db2 update db cfg for {{ db2_dbname }} using AUTO_DB_BACKUP ON DEFERRED
db2 update db cfg for {{ db2_dbname }} using CATALOGCACHE_SZ 800 DEFERRED
db2 update db cfg for {{ db2_dbname }} using CHNGPGS_THRESH 40 DEFERRED
db2 update db cfg for {{ db2_dbname }} using DBHEAP AUTOMATIC
db2 update db cfg for {{ db2_dbname }} using LOCKLIST AUTOMATIC DEFERRED
db2 update db cfg for {{ db2_dbname }} using LOGBUFSZ 1024 DEFERRED
db2 update db cfg for {{ db2_dbname }} using LOCKTIMEOUT 300 DEFERRED
db2 update db cfg for {{ db2_dbname }} using LOGPRIMARY 20 DEFERRED
db2 update db cfg for {{ db2_dbname }} using LOGSECOND 100 DEFERRED
db2 update db cfg for {{ db2_dbname }} using LOGFILSIZ 8192 DEFERRED
db2 update db cfg for {{ db2_dbname }} using SOFTMAX 1000 DEFERRED
db2 update db cfg for {{ db2_dbname }} using MAXFILOP 61440 DEFERRED
db2 update db cfg for {{ db2_dbname }} using PCKCACHESZ AUTOMATIC DEFERRED
db2 update db cfg for {{ db2_dbname }} using STAT_HEAP_SZ AUTOMATIC DEFERRED
db2 update db cfg for {{ db2_dbname }} using STMTHEAP AUTOMATIC DEFERRED
db2 update db cfg for {{ db2_dbname }} using UTIL_HEAP_SZ 10000 DEFERRED
db2 update db cfg for {{ db2_dbname }} using DATABASE_MEMORY AUTOMATIC DEFERRED
db2 update db cfg for {{ db2_dbname }} using AUTO_STMT_STATS OFF DEFERRED
db2 update db cfg for {{ db2_dbname }} using STMT_CONC LITERALS DEFERRED
db2 update alert cfg for database on {{ db2_dbname }} using db.db_backup_req SET THRESHOLDSCHECKED YES
db2 update alert cfg for database on {{ db2_dbname }} using db.tb_reorg_req SET THRESHOLDSCHECKED YES
db2 update alert cfg for database on {{ db2_dbname }} using db.tb_runstats_req SET THRESHOLDSCHECKED YES
db2 update dbm cfg using PRIV_MEM_THRESH 32767 DEFERRED
db2 update dbm cfg using KEEPFENCED NO DEFERRED
db2 update dbm cfg using NUMDB 2 DEFERRED
db2 update dbm cfg using RQRIOBLK 65535 DEFERRED
db2 update dbm cfg using HEALTH_MON OFF DEFERRED
db2 update dbm cfg using AGENT_STACK_SZ 1000 DEFERRED
db2 update dbm cfg using MON_HEAP_SZ AUTOMATIC DEFERRED
db2 update db cfg using DDL_CONSTRAINT_DEF Yes
db2set DB2_SKIPINSERTED=ON
db2set DB2_INLIST_TO_NLJN=YES
db2set DB2_MINIMIZE_LISTPREFETCH=Y
db2set DB2_EVALUNCOMMITTED=YES
db2set DB2_FMP_COMM_HEAPSZ=65536
db2set DB2_SKIPDELETED=ON
db2set DB2_USE_ALTERNATE_PAGE_CLEANING=ON

# These will fail if re-running the script, but I don't know enough about Db2 to make them idempotent
# so for now we will ignore failures in them
set +e
db2 CREATE BUFFERPOOL MAXBUFPOOL IMMEDIATE SIZE 4096 AUTOMATIC PAGESIZE 32 K
db2 CREATE REGULAR TABLESPACE MAXDATA PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE INITIALSIZE {{ db2_tablespace_data_size }} BUFFERPOOL MAXBUFPOOL
db2 CREATE TEMPORARY TABLESPACE MAXTEMP PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL MAXBUFPOOL
db2 CREATE REGULAR TABLESPACE MAXINDEX PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE INITIALSIZE {{ db2_tablespace_index_size }} BUFFERPOOL MAXBUFPOOL
db2 create schema {{ db2_schema }} authorization {{ db2_username }}

set -e
db2stop force
sleep 10
db2start

echo "COMPLETE" > /tmp/setupdb_complete
chmod a+rw /tmp/setupdb_complete

# If we get this far, then we can consider the setup a success
exit 0